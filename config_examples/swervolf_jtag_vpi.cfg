source [find interface/jtag_vpi.cfg]

set _CHIPNAME riscv

jtag newtap $_CHIPNAME cpu -irlen 5 -expected-id 0x01 -ignore-version
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME riscv -chain-position $_TARGETNAME

# No MMU on SweRV (do not attempt virt2phys address translation)
riscv set_enable_virt2phys off

# SweRV does not have RISC-V Debug Program Buffer.
# So prefer System Bus Access (SBA) when accessing memory.
riscv set_prefer_sba on

# Make ICCM and DCCM accessible on SweRV.
# Note:   SweRV's xCCM memories are accessible through abstract access only.
# Note 2: Command "riscv add_abstract_mem_range" is a custom workaround for SweRV EH1 <= 1.7.
#         It is not part of upstream OpenOCD.
# TODO: uncomment commands on the following lines and set correct ranges if you have xCCM or PIC enabled
# DCCM:
#riscv add_abstract_mem_range <ICCM_start_addr> <ICCM_len_bytes>
# ICCM:
#riscv add_abstract_mem_range <DCCM_start_addr> <DCCM_len_bytes>
# PIC:
#riscv add_abstract_mem_range <PIC_start_addr> <PIC_len_bytes>

# Expose custom SweRV CSR dmst (CSR 0x7c4 == 1988)
riscv expose_csrs 1988

proc swerv_eh1_execute_fence {} {
    # Execute fence + fence.i via "dmst" register
    reg csr1988 0x3
}

# Configure events hooks in OpenOCD to execute Fence + Fence.i when resuming
# the processor from the debug mode. This is needed for proper operation
# of SW breakpoints when ICACHE in SweRV is enabled:

$_TARGETNAME configure -event resume-start {
    swerv_eh1_execute_fence
}

$_TARGETNAME configure -event step-start {
    # Note: As of Q2/2020, "step-start" event is a new feature in OpenOCD.
    # A very recent version of OpenOCD is needed (upstream commit 25efc150 or newer).
    swerv_eh1_execute_fence
}

